define(["backbone.marionette","communicator","app","models/MapModel","globals","openlayers","filesaver"],function(a,b,c,d,e){var f=a.View.extend({model:new d.MapModel,initialize:function(a){this.map=void 0,this.isClosed=!0,this.tileManager=a.tileManager,$(window).resize(function(){this.map&&this.onResize()}.bind(this))},createMap:function(){this.$el.attr("id","map"),this.map=new OpenLayers.Map({div:this.el,fallThrough:!0,tileManager:this.tileManager}),this.map.events.register("move",this.map,function(a){var b=a.object.getCenter();this.model.set({center:[b.lon,b.lat],zoom:a.object.zoom})}.bind(this)),this.vectorLayer=new OpenLayers.Layer.Vector("Vector Layer"),this.map.addLayers([this.vectorLayer]),this.map.addControl(new OpenLayers.Control.MousePosition),this.drawControls={pointSelection:new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.Point),lineSelection:new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.Path),polygonSelection:new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.Polygon),bboxSelection:new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.RegularPolygon,{handlerOptions:{sides:4,irregular:!0}})};for(var a in this.drawControls)this.map.addControl(this.drawControls[a]),this.drawControls[a].events.register("featureadded","",this.onDone);e.baseLayers.each(function(a){this.map.addLayer(this.createLayer(a))},this),e.products.each(function(a){this.map.addLayer(this.createLayer(a))},this),e.overlays.each(function(a){this.map.addLayer(this.createLayer(a))},this),this.onSortProducts();var b={internalProjection:this.map.baseLayer.projection,externalProjection:new OpenLayers.Projection("EPSG:4326")};this.geojson=new OpenLayers.Format.GeoJSON(b);var c=e.objects.get("mapmodel");this.map.setCenter(new OpenLayers.LonLat(c.get("center")),c.get("zoom"))},onShow:function(){return this.map||this.createMap(),this.isClosed=!1,this.onResize(),this},onResize:function(){this.map.updateSize()},createLayer:function(a){var c=null,d=a.get("view");switch(d.protocol){case"WMTS":c=new OpenLayers.Layer.WMTS({name:a.get("name"),layer:d.id,protocol:d.protocol,url:d.urls,matrixSet:d.matrixSet,style:d.style,format:d.format,maxExtent:d.maxExtent,resolutions:d.resolutions,projection:d.projection,gutter:d.gutter,buffer:d.buffer,units:d.units,transitionEffect:d.transitionEffect,isphericalMercator:d.isphericalMercator,isBaseLayer:d.isBaseLayer,wrapDateLine:d.wrapDateLine,zoomOffset:d.zoomOffset,visible:a.get("visible"),time:a.get("time")});break;case"WMS":c=new OpenLayers.Layer.WMS(a.get("name"),d.urls[0],{layers:d.id,transparent:"true",format:"image/png",time:a.get("time")},{format:"image/png",matrixSet:d.matrixSet,style:d.style,format:d.format,maxExtent:d.maxExtent,resolutions:d.resolutions,projection:d.projection,gutter:d.gutter,buffer:d.buffer,units:d.units,transitionEffect:d.transitionEffect,isphericalMercator:d.isphericalMercator,isBaseLayer:d.isBaseLayer,wrapDateLine:d.wrapDateLine,zoomOffset:d.zoomOffset,visibility:a.get("visible")})}return c.events.register("loadstart",this,function(){b.mediator.trigger("progress:change",!0)}),c.events.register("loadend",this,function(){b.mediator.trigger("progress:change",!1)}),c},centerMap:function(a){this.map.setCenter(new OpenLayers.LonLat(a.x,a.y),a.l),this.model.set({center:[a.x,a.y],zoom:a.l})},changeLayer:function(a){if(a.isBaseLayer)e.baseLayers.forEach(function(a){a.set("visible",!1)}),e.baseLayers.find(function(b){return b.get("name")==a.name}).set("visible",!0),this.map.setBaseLayer(this.map.getLayersByName(a.name)[0]);else{var b=e.products.find(function(b){return b.get("name")==a.name});b?b.set("visible",a.visible):e.overlays.find(function(b){return b.get("name")==a.name}).set("visible",a.visible),this.map.getLayersByName(a.name)[0].setVisibility(a.visible)}},onSortProducts:function(){e.products.each(function(a){var b=this.map.getLayersByName(a.get("name"))[0],c=e.products.indexOf(b);this.map.setLayerIndex(b,c)},this),console.log("Map products sorted")},onUpdateOpacity:function(a){var b=this.map.getLayersByName(a.model.get("name"))[0];b&&b.setOpacity(a.value)},onSelectionActivated:function(a){if(a.active)for(key in this.drawControls){var c=this.drawControls[key];a.id==key?c.activate():(c.layer.removeAllFeatures(),c.deactivate(),b.mediator.trigger("selection:changed",null))}else for(key in this.drawControls){var c=this.drawControls[key];c.layer.removeAllFeatures(),c.deactivate(),b.mediator.trigger("selection:changed",null)}},onLoadGeoJSON:function(a){this.vectorLayer.removeAllFeatures();var b,c=this.geojson.read(a);if(c){c.constructor!=Array&&(c=[c]);for(var d=0;d<c.length;++d)b?b.extend(c[d].geometry.getBounds()):b=c[d].geometry.getBounds();this.vectorLayer.addFeatures(c),this.map.zoomToExtent(b)}},onExportGeoJSON:function(){var a=this.geojson.write(this.polygonLayer.features,!0),b=new Blob([a],{type:"text/plain;charset=utf-8"});saveAs(b,"selection.geojson")},onGetGeoJSON:function(){return this.geojson.write(this.vectorLayer.features,!0)},onDone:function(a){b.mediator.trigger("selection:changed",a.feature.geometry)},onTimeChange:function(a){var b=getISODateTimeString(a.start)+"/"+getISODateTimeString(a.end);e.products.each(function(a){if(a.get("timeSlider")){a.set("time",b);var c=this.map.getLayersByName(a.get("name"))[0];c.mergeNewParams({time:b})}},this)},onClose:function(){this.isClosed=!0}});return f});